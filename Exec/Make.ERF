AMREX_HOME      ?= $(ERF_HOME)/Submodules/AMReX

BL_NO_FORT = TRUE

include $(AMREX_HOME)/Tools/GNUMake/Make.defs

EBASE = ERF

ERF_SOURCE_DIR = $(ERF_HOME)/Source
include $(ERF_SOURCE_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_SOURCE_DIR)
INCLUDE_LOCATIONS += $(ERF_SOURCE_DIR)

ERF_BC_DIR = $(ERF_SOURCE_DIR)/BoundaryConditions
include $(ERF_BC_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_BC_DIR)
INCLUDE_LOCATIONS += $(ERF_BC_DIR)

ERF_ADVECTION_DIR = $(ERF_SOURCE_DIR)/Advection
include $(ERF_ADVECTION_DIR)/Make.package

ERF_DIFFUSION_DIR = $(ERF_SOURCE_DIR)/Diffusion
include $(ERF_DIFFUSION_DIR)/Make.package

ERF_UTIL_DIR = $(ERF_SOURCE_DIR)/Utils
include $(ERF_UTIL_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_ADVECTION_DIR)
INCLUDE_LOCATIONS += $(ERF_ADVECTION_DIR)

VPATH_LOCATIONS   += $(ERF_DIFFUSION_DIR)
INCLUDE_LOCATIONS += $(ERF_DIFFUSION_DIR)

VPATH_LOCATIONS   += $(ERF_UTIL_DIR)
INCLUDE_LOCATIONS += $(ERF_UTIL_DIR)

ERF_TIMEINT_DIR = $(ERF_SOURCE_DIR)/TimeIntegration
include $(ERF_TIMEINT_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_TIMEINT_DIR)
INCLUDE_LOCATIONS += $(ERF_TIMEINT_DIR)

ERF_IO_DIR = $(ERF_SOURCE_DIR)/IO
include $(ERF_IO_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_IO_DIR)
INCLUDE_LOCATIONS += $(ERF_IO_DIR)

include $(ERF_PROBLEM_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_PROBLEM_DIR)
INCLUDE_LOCATIONS += $(ERF_PROBLEM_DIR)

include $(AMREX_HOME)/Src/Base/Make.package

AMReXdirs             := Base Boundary AmrCore

ifeq ($(USE_HDF5),TRUE)
AMReXdirs             += Extern/HDF5
endif

AMReXpack             += $(foreach dir, $(AMReXdirs), $(AMREX_HOME)/Src/$(dir)/Make.package)

include $(AMReXpack)

ifeq ($(USE_MOISTURE), TRUE)
  DEFINES += -DERF_USE_MOISTURE
endif

ifeq ($(USE_MULTIBLOCK), TRUE)
  DEFINES += -DERF_USE_MULTIBLOCK
endif

#turn on NetCDF macro define
ifeq ($(USE_NETCDF), TRUE)
  DEFINES += -DERF_USE_NETCDF
# includes += $(shell pkg-config --cflags netcdf)
# LIBRARIES += $(shell pkg-config --libs netcdf)
##############################################
# IF RUNNING ON PERLMUTTER USE THE LINES BELOW
##############################################
# LIBRARIES += -lnetcdf -lm -lz -ldl -lbz2 -lcurl
#includes += -I/global/common/software/spackecp/perlmutter/e4s-21.11/software/cray-sles15-zen3/gcc-11.2.0/netcdf-c-4.8.1-4thfa4eawkpqteg2co2w6ptvh24hgxbi/include/
#  LIBRARY_LOCATIONS +=  /global/common/software/spackecp/perlmutter/e4s-21.11/software/cray-sles15-zen3/gcc-11.2.0/netcdf-c-4.8.1-4thfa4eawkpqteg2co2w6ptvh24hgxbi/lib/
##############################################
# END PERLMUTTER-SPECIFIC 
##############################################
# LIBRARIES += -lnetcdf -lm -lz -ldl -lbz2 -lcurl
endif

ifeq ($(USE_HDF5), TRUE)
  DEFINES += -DERF_USE_HDF5
  DEFINES += -DAMREX_USE_HDF5
endif

CEXE_sources += AMReX_buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/AMReX_buildInfo.H
INCLUDE_LOCATIONS += $(AMREX_HOME)/Tools/C_scripts

include $(AMREX_HOME)/Tools/GNUMake/Make.rules

all: $(executable)
	(SILENT) $(RM) AMReX_buildInfo.cpp
	@echo SUCCESS

AMReX_buildInfo.cpp:
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --amrex_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --CXX_comp_name "$(CXX)" \
          --CXX_flags "$(CXXFLAGS) $(CXXFLAGS) $(CPPFLAGS) $(includes)" \
          --link_flags "$(LINKFLAGS) $(CPPFLAGS) $(includes) $(LDFLAGS)" \
          --libraries "$(FINAL_LIBS)" \
          --MODULES "$(MNAMES)" \
          --GIT "$(ERF_HOME) $(AMREX_HOME)" \
          --GIT_STYLE "--always --dirty"

clean::
	$(SILENT) $(RM) AMReX_buildInfo.cpp
