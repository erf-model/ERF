AMREX_HOME      ?= $(ERF_HOME)/Submodules/AMReX

BL_NO_FORT = TRUE

include $(AMREX_HOME)/Tools/GNUMake/Make.defs

EBASE = ERF

ERF_SOURCE_DIR = $(ERF_HOME)/Source
include $(ERF_SOURCE_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_SOURCE_DIR)
INCLUDE_LOCATIONS += $(ERF_SOURCE_DIR)

ERF_BC_DIR = $(ERF_SOURCE_DIR)/BoundaryConditions
include $(ERF_BC_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_BC_DIR)
INCLUDE_LOCATIONS += $(ERF_BC_DIR)

ERF_ADVECTION_DIR = $(ERF_SOURCE_DIR)/Advection
include $(ERF_ADVECTION_DIR)/Make.package

ERF_DIFFUSION_DIR = $(ERF_SOURCE_DIR)/Diffusion
include $(ERF_DIFFUSION_DIR)/Make.package

ERF_PBL_DIR = $(ERF_SOURCE_DIR)/PBL
include $(ERF_PBL_DIR)/Make.package

ERF_INIT_DIR = $(ERF_SOURCE_DIR)/Initialization
include $(ERF_INIT_DIR)/Make.package

ERF_DATA_DIR = $(ERF_SOURCE_DIR)/DataStructs
include $(ERF_DATA_DIR)/Make.package

ERF_UTIL_DIR = $(ERF_SOURCE_DIR)/Utils
include $(ERF_UTIL_DIR)/Make.package

ERF_MULTIBLOCK_DIR = $(ERF_SOURCE_DIR)/MultiBlock
include $(ERF_MULTIBLOCK_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_ADVECTION_DIR)
INCLUDE_LOCATIONS += $(ERF_ADVECTION_DIR)

VPATH_LOCATIONS   += $(ERF_DIFFUSION_DIR)
INCLUDE_LOCATIONS += $(ERF_DIFFUSION_DIR)

VPATH_LOCATIONS   += $(ERF_PBL_DIR)
INCLUDE_LOCATIONS += $(ERF_PBL_DIR)

VPATH_LOCATIONS   += $(ERF_INIT_DIR)
INCLUDE_LOCATIONS += $(ERF_INIT_DIR)

VPATH_LOCATIONS   += $(ERF_DATA_DIR)
INCLUDE_LOCATIONS += $(ERF_DATA_DIR)

VPATH_LOCATIONS   += $(ERF_UTIL_DIR)
INCLUDE_LOCATIONS += $(ERF_UTIL_DIR)

ifeq ($(USE_MULTIBLOCK),TRUE)
VPATH_LOCATIONS   += $(ERF_MULTIBLOCK_DIR)
INCLUDE_LOCATIONS += $(ERF_MULTIBLOCK_DIR)
endif

ifeq ($(USE_PARTICLES),TRUE)
ERF_PARTICLES_DIR = $(ERF_SOURCE_DIR)/Particles
include $(ERF_PARTICLES_DIR)/Make.package
VPATH_LOCATIONS   += $(ERF_PARTICLES_DIR)
INCLUDE_LOCATIONS += $(ERF_PARTICLES_DIR)
endif

ifeq ($(USE_EB),TRUE)
ERF_EB_DIR = $(ERF_SOURCE_DIR)/EB
include $(ERF_EB_DIR)/Make.package
VPATH_LOCATIONS   += $(ERF_EB_DIR)
INCLUDE_LOCATIONS += $(ERF_EB_DIR)
endif

ERF_SRCTERMS_DIR = $(ERF_SOURCE_DIR)/SourceTerms
include $(ERF_SRCTERMS_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_SRCTERMS_DIR)
INCLUDE_LOCATIONS += $(ERF_SRCTERMS_DIR)

ERF_TIMEINT_DIR = $(ERF_SOURCE_DIR)/TimeIntegration
include $(ERF_TIMEINT_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_TIMEINT_DIR)
INCLUDE_LOCATIONS += $(ERF_TIMEINT_DIR)

ERF_IO_DIR = $(ERF_SOURCE_DIR)/IO
include $(ERF_IO_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_IO_DIR)
INCLUDE_LOCATIONS += $(ERF_IO_DIR)

include $(ERF_PROBLEM_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_PROBLEM_DIR)
INCLUDE_LOCATIONS += $(ERF_PROBLEM_DIR)

include $(AMREX_HOME)/Src/Base/Make.package

AMReXdirs             := Base Boundary AmrCore

ifeq ($(USE_PARTICLES),TRUE)
AMReXdirs             += Particle
endif

ifeq ($(USE_EB),TRUE)
AMReXdirs             += EB
endif

ifeq ($(USE_POISSON_SOLVE),TRUE)
AMReXdirs             += LinearSolvers/MLMG
endif

ifeq ($(USE_HDF5),TRUE)
AMReXdirs             += Extern/HDF5
endif

AMReXpack             += $(foreach dir, $(AMReXdirs), $(AMREX_HOME)/Src/$(dir)/Make.package)

include $(AMReXpack)

ERF_MOISTURE_DIR = $(ERF_SOURCE_DIR)/Microphysics
include $(ERF_MOISTURE_DIR)/Make.package
VPATH_LOCATIONS   += $(ERF_MOISTURE_DIR)
INCLUDE_LOCATIONS += $(ERF_MOISTURE_DIR)

ERF_MOISTURE_NULL_DIR = $(ERF_SOURCE_DIR)/Microphysics/Null
include $(ERF_MOISTURE_NULL_DIR)/Make.package
VPATH_LOCATIONS   += $(ERF_MOISTURE_NULL_DIR)
INCLUDE_LOCATIONS += $(ERF_MOISTURE_NULL_DIR)

ERF_MOISTURE_SAM_DIR = $(ERF_SOURCE_DIR)/Microphysics/SAM
include $(ERF_MOISTURE_SAM_DIR)/Make.package
VPATH_LOCATIONS   += $(ERF_MOISTURE_SAM_DIR)
INCLUDE_LOCATIONS += $(ERF_MOISTURE_SAM_DIR) 

ERF_MOISTURE_KESSLER_DIR = $(ERF_SOURCE_DIR)/Microphysics/Kessler
include $(ERF_MOISTURE_KESSLER_DIR)/Make.package
VPATH_LOCATIONS   += $(ERF_MOISTURE_KESSLER_DIR)
INCLUDE_LOCATIONS += $(ERF_MOISTURE_KESSLER_DIR)

# If using windfarm parametrization, then compile all models and choose 
# at runtime from the inputs
ifeq ($(USE_WINDFARM), TRUE)
DEFINES += -DERF_USE_WINDFARM
ERF_WINDFARM_DIR        = $(ERF_SOURCE_DIR)/WindFarmParametrization
ERF_WINDFARM_NULL_DIR   = $(ERF_WINDFARM_DIR)/Null
ERF_WINDFARM_FITCH_DIR = $(ERF_WINDFARM_DIR)/Fitch
ERF_WINDFARM_EWP_DIR   = $(ERF_WINDFARM_DIR)/EWP
ERF_WINDFARM_SIMPLEAD_DIR   = $(ERF_WINDFARM_DIR)/SimpleActuatorDisk

include $(ERF_WINDFARM_DIR)/Make.package
include $(ERF_WINDFARM_NULL_DIR)/Make.package
include $(ERF_WINDFARM_FITCH_DIR)/Make.package
include $(ERF_WINDFARM_EWP_DIR)/Make.package
include $(ERF_WINDFARM_SIMPLEAD_DIR)/Make.package

VPATH_LOCATIONS   += $(ERF_WINDFARM_DIR)
INCLUDE_LOCATIONS += $(ERF_WINDFARM_DIR)

VPATH_LOCATIONS   += $(ERF_WINDFARM_NULL_DIR)
INCLUDE_LOCATIONS += $(ERF_WINDFARM_NULL_DIR)

VPATH_LOCATIONS   += $(ERF_WINDFARM_FITCH_DIR)
INCLUDE_LOCATIONS += $(ERF_WINDFARM_FITCH_DIR)

VPATH_LOCATIONS   += $(ERF_WINDFARM_EWP_DIR)
INCLUDE_LOCATIONS += $(ERF_WINDFARM_EWP_DIR)

VPATH_LOCATIONS   += $(ERF_WINDFARM_SIMPLEAD_DIR)
INCLUDE_LOCATIONS += $(ERF_WINDFARM_SIMPLEAD_DIR)
endif

ifeq ($(USE_WW3_COUPLING), TRUE)
	DEFINES += -DERF_USE_WW3_COUPLING
endif

ERF_LSM_DIR = $(ERF_SOURCE_DIR)/LandSurfaceModel
include $(ERF_LSM_DIR)/Make.package
VPATH_LOCATIONS   += $(ERF_LSM_DIR)
INCLUDE_LOCATIONS += $(ERF_LSM_DIR)

ERF_LSM_NULL_DIR = $(ERF_SOURCE_DIR)/LandSurfaceModel/Null
include $(ERF_LSM_NULL_DIR)/Make.package
VPATH_LOCATIONS   += $(ERF_LSM_NULL_DIR)
INCLUDE_LOCATIONS += $(ERF_LSM_NULL_DIR)

ERF_LSM_SLM_DIR = $(ERF_SOURCE_DIR)/LandSurfaceModel/SLM
include $(ERF_LSM_SLM_DIR)/Make.package
VPATH_LOCATIONS   += $(ERF_LSM_SLM_DIR)
INCLUDE_LOCATIONS += $(ERF_LSM_SLM_DIR)

ERF_LSM_MM5_DIR = $(ERF_SOURCE_DIR)/LandSurfaceModel/MM5
include $(ERF_LSM_MM5_DIR)/Make.package
VPATH_LOCATIONS   += $(ERF_LSM_MM5_DIR)
INCLUDE_LOCATIONS += $(ERF_LSM_MM5_DIR)
        
ifeq ($(COMPUTE_ERROR), TRUE)
  DEFINES += -DERF_COMPUTE_ERROR
endif

ifeq ($(USE_POISSON_SOLVE), TRUE)
  DEFINES += -DERF_USE_POISSON_SOLVE
  USERSuffix += .INC
endif

ifeq ($(USE_PARTICLES), TRUE)
  DEFINES += -DERF_USE_PARTICLES
endif

ifeq ($(USE_EB), TRUE)
  DEFINES += -DERF_USE_EB
endif

ifeq ($(USE_MULTIBLOCK), TRUE)
  DEFINES += -DERF_USE_MULTIBLOCK
endif

#turn on NetCDF macro define
ifeq ($(USE_NETCDF), TRUE)
  DEFINES += -DERF_USE_NETCDF
  includes += $(shell pkg-config --cflags netcdf)
  LIBRARIES += $(shell pkg-config --libs netcdf)
endif

ifeq ($(USE_HDF5), TRUE)
  DEFINES += -DERF_USE_HDF5
  DEFINES += -DAMREX_USE_HDF5
endif

ifeq ($(USE_TERRAIN_VELOCITY), TRUE)
  DEFINES += -DERF_USE_TERRAIN_VELOCITY
endif

CEXE_sources += AMReX_buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/AMReX_buildInfo.H
INCLUDE_LOCATIONS += $(AMREX_HOME)/Tools/C_scripts

include $(AMREX_HOME)/Tools/GNUMake/Make.rules

all: $(executable)
	(SILENT) $(RM) AMReX_buildInfo.cpp
	@echo SUCCESS

AMReX_buildInfo.cpp:
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --amrex_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --CXX_comp_name "$(CXX)" \
          --CXX_flags "$(CXXFLAGS) $(CXXFLAGS) $(CPPFLAGS) $(includes)" \
          --link_flags "$(LINKFLAGS) $(CPPFLAGS) $(includes) $(LDFLAGS)" \
          --libraries "$(FINAL_LIBS)" \
          --MODULES "$(MNAMES)" \
          --GIT "$(ERF_HOME) $(AMREX_HOME)" \
          --GIT_STYLE "--always --dirty"

clean::
	$(SILENT) $(RM) AMReX_buildInfo.cpp
