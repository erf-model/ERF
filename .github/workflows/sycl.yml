name: ERF CI (sycl)

on:
  push:
    # branches: [development]
    paths-ignore:
      - Docs
      - README.rst
      - license.txt

  pull_request:
    branches: [development]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-sycl
  cancel-in-progress: true

jobs:
  Build-And-Test-SYCL:
    name: oneAPI SYCL
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Dependencies
      run: Submodules/AMReX/.github/workflows/dependencies/dependencies_dpcpp.sh

    - name: Install CCache
      run: Submodules/AMReX/.github/workflows/dependencies/dependencies_ccache.sh

    - name: Set Up Cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/ccache
        key: ccache-${{ github.workflow }}-${{ github.job }}-git-${{ github.sha }}
        restore-keys: |
             ccache-${{ github.workflow }}-${{ github.job }}-git-

    - name: Build & Install
      run: |
        export CCACHE_COMPRESS=1
        export CCACHE_COMPRESSLEVEL=10
        export CCACHE_MAXSIZE=250M
        export CCACHE_DEPEND=1
        ccache -z

        set +e
        source /opt/intel/oneapi/setvars.sh
        set -e
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_VERBOSE_MAKEFILE=ON                   \
          -DCMAKE_INSTALL_PREFIX:PATH=${{runner.workspace}}/ERF/install \
          -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
          -DERF_DIM:STRING=3 \
          -DERF_ENABLE_MPI:BOOL=ON \
          -DERF_ENABLE_SYCL:BOOL=ON \
          -DERF_ENABLE_TESTS:BOOL=ON \
          -DERF_ENABLE_ALL_WARNINGS:BOOL=ON \
          -DERF_ENABLE_FCOMPARE:BOOL=ON \
          -DCMAKE_C_COMPILER=$(which icx) \
          -DCMAKE_CXX_COMPILER=$(which icpx) \
          -DCMAKE_CXX_STANDARD=17
        make -j 2 2>&1 | tee -a ${{runner.workspace}}/build-output.txt;

        ccache -s
        du -hs ~/.cache/ccache

    - name: Report
      run: |
        egrep "warning:|error:" ${{runner.workspace}}/build-output.txt \
          | egrep -v "Submodules/amrex" | egrep -v "lto-wrapper: warning:" | sort | uniq \
          | awk 'BEGIN{i=0}{print $0}{i++}END{print "Warnings: "i}' > ${{runner.workspace}}/build-output-warnings.txt
        cat ${{runner.workspace}}/build-output-warnings.txt
        export return=$(tail -n 1 ${{runner.workspace}}/build-output-warnings.txt | awk '{print $2}')
        exit ${return}

  save_pr_number:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Save PR number
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          echo $PR_NUMBER > pr_number.txt
      - uses: actions/upload-artifact@v4
        with:
          name: pr_number
          path: pr_number.txt
          retention-days: 1
