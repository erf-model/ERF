name: ERF CUDA CI

on:
  push:
    # branches: [development]
    paths-ignore:
      - Docs
      - README.rst
      - license.txt

  pull_request:
    branches: [development]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-cuda-ci
  cancel-in-progress: true

jobs:
  cuda-build:
    runs-on: ubuntu-20.04
    name: CUDA v${{matrix.cuda_ver}}
    strategy:
      matrix:
        cuda_pkg: [11-0]
        include:
          - cuda_ver: "11.0"
            cuda_pkg: 11-0
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{github.token}}
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Prepare CUDA environment
        run: Submodules/AMReX/.github/workflows/dependencies/dependencies_nvcc.sh ${{matrix.cuda_ver}}
      - name: Configure and build
        run: |
          export PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
          export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:${LD_LIBRARY_PATH}
          which nvcc || echo "nvcc not in PATH!"
          cmake -Bbuild-${{matrix.cuda_pkg}} \
            -DCMAKE_BUILD_TYPE:STRING=RelWithDebInfo \
            -DAMReX_CUDA_ERROR_CROSS_EXECUTION_SPACE_CALL=ON \
            -DAMReX_CUDA_ERROR_CAPTURE_THIS=ON           \
            -DERF_DIM:STRING=3 \
            -DERF_ENABLE_MPI:BOOL=ON \
            -DERF_ENABLE_CUDA:BOOL=ON .
          cmake --build build-${{matrix.cuda_pkg}} -- -j $(nproc)
