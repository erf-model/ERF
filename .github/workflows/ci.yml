name: ERF CI

on:
  push:
    # branches: [development]
    paths-ignore:
      - Docs
      - README.rst
      - license.txt

  pull_request:
    branches: [development]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-ci
  cancel-in-progress: true

jobs:

  Build-And-Test:

    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
        - os: ubuntu-latest
          install_deps: sudo apt-get install mpich libmpich-dev gcovr
          comp: gnu
          procs: $(nproc)

    steps:

    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup
      run: |
        # echo "::add-matcher::.github/problem-matchers/gcc.json"
        echo "NPROCS=${{matrix.procs}}" >> $GITHUB_ENV
        # cmake -E make_directory ${{runner.workspace}}/deps

    - name: Handle Dependencies
      run: |
        # Install MPI
        ${{matrix.install_deps}}

    - name: Configure CMake
      run: |
        cmake \
          -B${{runner.workspace}}/ERF/build-${{matrix.os}} \
          -DCMAKE_INSTALL_PREFIX:PATH=${{runner.workspace}}/ERF/install \
          -DCMAKE_BUILD_TYPE:STRING=Debug \
          -DERF_DIM:STRING=3 \
          -DERF_ENABLE_MPI:BOOL=ON \
          -DERF_ENABLE_TESTS:BOOL=ON \
          -DERF_ENABLE_ALL_WARNINGS:BOOL=ON \
          -DERF_ENABLE_FCOMPARE:BOOL=ON \
          ${{github.workspace}};
        # ${{matrix.mpipreflags}} \
        # -DCODECOVERAGE:BOOL=ON \

    - name: Build
      run: |
        cmake --build ${{runner.workspace}}/ERF/build-${{matrix.os}} --parallel ${{env.NPROCS}};

    - name: Regression Tests
      run: |
        ctest -L regression -VV
      working-directory: ${{runner.workspace}}/ERF/build-${{matrix.os}}

    # Raf: disabled Codecov since the dashboard and GitHub comments were buggy,
    # but it may be useful to post the gcov coverage reports to GitHub Actions
    # artifacts.
    # Note: if reenabling Codecov, the reports must be in xml format not html.
    # - name: Generate coverage report
    #   working-directory: ${{runner.workspace}}/ERF/build-${{matrix.os}}
    #   run: |
    #     find . -type f -name '*.gcno' -path "**Source**" -exec gcov -pb {} +
    #     cd ..
    #     gcovr -g -k -r . --xml regressioncov.html  # -v
    # - name: Success artifacts
    #   uses: actions/upload-artifact@v2
    #   if: success()
    #   with:
    #     name: build-and-test
    #     path: |
    #       ${{runner.workspace}}/ERF/regressioncov.html
    # - name: Failing test artifacts
    #   uses: actions/upload-artifact@v2
    #   if: failure()
    #   with:
    #     name: build-and-test
    #     path: |
    #       ${{runner.workspace}}/ERF/regressioncov.html

  Build-And-Test-With-SUNDIALS:

    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
        include:
        - os: ubuntu-latest
          install_deps: sudo apt-get install mpich libmpich-dev gcovr
          comp: gnu
          procs: $(nproc)

    steps:

    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup
      run: |
        # echo "::add-matcher::.github/problem-matchers/gcc.json"
        echo "NPROCS=${{matrix.procs}}" >> $GITHUB_ENV
        # cmake -E make_directory ${{runner.workspace}}/deps

    - name: Handle Dependencies
      run: |
        # Install MPI
        ${{matrix.install_deps}}

    - name: Configure CMake
      run: |
        cmake \
          -B${{runner.workspace}}/ERF/build-sundials-${{matrix.os}} \
          -DCMAKE_INSTALL_PREFIX:PATH=${{runner.workspace}}/ERF/install-sundials \
          -DCMAKE_BUILD_TYPE:STRING=Debug \
          -DERF_DIM:STRING=3 \
          -DERF_ENABLE_MPI:BOOL=ON \
          -DERF_ENABLE_TESTS:BOOL=ON \
          -DERF_ENABLE_ALL_WARNINGS:BOOL=ON \
          -DERF_ENABLE_SUNDIALS:BOOL=ON \
          -DERF_ENABLE_FCOMPARE:BOOL=ON \
          ${{github.workspace}};
        # ${{matrix.mpipreflags}} \
        # -DCODECOVERAGE:BOOL=ON \

    - name: Build
      run: |
        cmake --build ${{runner.workspace}}/ERF/build-sundials-${{matrix.os}} --parallel ${{env.NPROCS}};

    - name: Regression Tests
      run: |
        ctest -L 'regression|sundials' -VV
      working-directory: ${{runner.workspace}}/ERF/build-sundials-${{matrix.os}}
